/*Grace Stewart
CS200
Rylan Chong
2 October 2023
Creating dtabase, tables, and relationships */
#save as txt when submitting

#Create database
CREATE DATABASE assignment2;

#Create tables

##Dorm table 1
CREATE TABLE dorm(
	dorName VARCHAR(30) NOT NULL PRIMARY KEY, #PK dorName
    dorPhone VARCHAR(20) NULL,
    dorAddress VARCHAR (50) NULL,
    dorCost INTEGER NULL
);

##Course table 2
CREATE TABLE course(
	crsID VARCHAR (10) NOT NULL PRIMARY KEY, #PK crsID
    crsName VARCHAR(50) NOT NULL,
    crsCredit INTEGER NOT NULL,
    crsPreq VARCHAR (30) NOT NULL
);

##Department table will have 2 foreign keys
CREATE TABLE department(
	depID VARCHAR(3) NOT NULL PRIMARY KEY,
    depName VARCHAR(30) NULL,
    depPhone VARCHAR(20) NULL
);

##Advisor table 3
CREATE TABLE advisor(
	advID INTEGER NOT NULL PRIMARY KEY,
    advPhone VARCHAR(20) NOT NULL,
    advFirstName VARCHAR(20) NOT NULL,
    advLastName VARCHAR(20) NOT NULL,
    depID VARCHAR(3) NULL,
    FOREIGN KEY (depID) REFERENCES department (depID)
);

##Student table 4
CREATE TABLE students(
	stdID INTEGER NOT NULL PRIMARY KEY, #PK stdID
    stdFirstName VARCHAR(30) NOT NULL,
    stdLastName VARCHAR(30) NOT NULL,
    stdAddress VARCHAR(50) NOT NULL,
    stdCity VARCHAR(30) NOT NULL,
    stdState CHAR(2) NOT NULL,
    stdZip INTEGER NOT NULL,
    stdEmail VARCHAR(50) NOT NULL,
    stdMajor VARCHAR(5) NULL,
    advID INTEGER NOT NULL, #alter to make FK after making advisor table
    dorName VARCHAR(20) NOT NULL,
    depID VARCHAR(3) NULL, #alter to make FK after making dept table
    FOREIGN KEY (depID) REFERENCES department (depID),
    FOREIGN KEY (advID) REFERENCES advisor (advID),
    FOREIGN KEY (dorName) REFERENCES dorm (dorName)
);

##Linking table last table 
CREATE TABLE student_course_linking(
    stdID INTEGER NOT NULL, ##this ver of sequel cannot take 2 primary keys
    crsID VARCHAR(10) NOT NULL,
    linComplete VARCHAR(3) NULL, #can use char or boolean instead
    linGrades CHAR(1) NULL,
    linSemester VARCHAR(6) NOT NULL,
    linYear VARCHAR(4) NOT NULL,
    FOREIGN KEY (stdID) REFERENCES students(stdID),
    FOREIGN KEY (crsID) REFERENCES course(crsID)
);


#inserting data

##dorm
INSERT INTO dorm (dorName, dorPhone, dorAddress, dorCost)
VALUES ('Lokelani', '735-4709', '3140 Waialae Ave', 1100),
			('None', null, null, null),
			('Kieffer', '735-5802', '3140 Waialae Ave', 500);

##course
INSERT INTO course (crsID, crsName, crsCredit, crsPreq)
VALUES ('ENV100', 'Intro to Expository Writiting', 3, 'None'),
			('ENV102', 'Expository Writing', 3, 'None'),
            ('ENV310', 'Types of Literature', 3, 'ENV102'),
            ('BU200', 'Intro to Business', 3, 'None'),
            ('CIS100', 'Computers and Applications Software', 3, 'None'),
            ('CIS400', 'Database design and management', 3, 'CIS100');
            
##department
INSERT INTO department (depID, depName, depPhone)
VALUES ('ENV', 'Environment', '437-2222'),
			('CIS', 'Computer Information Systems', '437-5555'),
            ('BU', 'Business', '437-3333');

##advisor
INSERT INTO advisor (advID, advPhone, advFirstname, advLastName, depID)
VALUES (11, '739-4601', 'Rylan', 'Chong', 'ENV'),
			(12, '749-4605', 'Robert', 'Maruyama', 'CIS'),
            (13, '739-4123', 'Laura', 'Tipton', null),
            (14, '739-4444', 'Mark', 'Speck', null);

##students
INSERT INTO students (stdID, stdFirstName, stdLastName, stdAddress, stdCity, stdState, stdZip, stdEmail, stdMajor, advID, dorName, depID)
VALUES (1, 'Bob', 'Furuhashi', '3140 Waialae Ave', 'Honolulu', 'HI', 96816, 'kshigiji@gmail.com', 'ENV', 11, 'Lokelani', 'ENV'),
			(2, 'Alice', 'Grey', '1610 Boiler Rd', 'West Lafayette', 'IN', 47906, 'alice.grey@student.chaminade.edu', 'CIS', 12, 'Lokelani', 'CIS'),
            (3, 'Christian', 'Phillips', '987 6th Ave', 'Honolulu', 'HI', 96816, 'cphillips@student.chaminade.edu', 'CIS', 12, 'Lokelani', 'CIS'),
            (4, 'Jeff', 'Bedora', '3046-B Harding Ave', 'Honolulu', 'HI',  96816, 'coolcatman2001@yahoo.com', 'CIS', 12, 'None', 'CIS'),
            (5, 'Hannah', 'Brown', '3140 Waialae Ave', 'Honolulu', 'HI', 96816, 'hannah.brown@student.chaminade.edu', 'ENV', 11, 'Lokelani', 'ENV'),
            (6, 'Rena', 'Phillips', '987 6th Ave', 'Honolulu', 'HI', 96816, 'rena.phillips@student.chaminade.edu', 'ENV', 11, 'Lokelani', 'ENV'),
            (7, 'Cathleen', 'Akemi', '3140 Waialae Ave', 'Honolulu', 'HI', 96816, 'cathleen.akemi@student.chaminade.edu', 'ENV', 11, 'Kieffer', 'ENV'),
            (8, 'Anthony', 'Davis', '3140 Waialae Ave', 'Honolulu', 'HI', 96816, 'anthony.davis@student.chaminade.edu', 'CIS', 12, 'Kieffer', 'CIS'),
            (9, 'Lori', 'Maumalanga',  '3140 Waialae Ave', 'Honolulu', 'HI', 96816, 'lori.maumalanga@student.chaminade.edu', 'CIS', 12, 'Lokelani', 'CIS'),
            (10, 'Becks', 'Holden', '123 Apple St', 'Aiea', 'HI', 96701, 'beck123@outlook.com', 'CIS', 12, 'Lokelani', 'CIS');

##student course linking
INSERT INTO student_course_linking (stdID, crsID, linComplete, linGrades, linSemester, linYear)
VALUES (1, 'ENV100', 'YES', 'A', 'Fall', '2009'),
			(1, 'ENV102', 'YES', 'C', 'Spring', '2010'),
            (1, 'ENV310', 'NO', null, 'Fall', '2010'),
            (2, 'BU200', 'YES', 'A', 'Spring', '2009'),
            (2, 'CIS100', 'YES', 'A', 'Spring', '2009'),
            (2, 'CIS400', 'YES', 'B', 'Fall', '2009');